#!/bin/bash -u
# description: check moodle nginx container

usage() {
    cat 1>&2 <<EOF
Script to check moodle nginx container.

ENVIRONMENT VARS:
PHP_FPM_CHECK_SOCKET    socket php-fpm listen to
MOODLE_DATA             moodledata path
MOODLE_CHECK_PATH       path from url to check ex. "/index.php"
MOODLE_CHECK_URL        optionally use a complete url instead of path
MOODLE_CHECK_CODE       http status code to expect
MOODLE_CHECK_HOST       set a host header

USAGE:
    check-container [OPTIONS]

OPTIONS (check moodle nginx container):
  -u            check url
  -m            check if moodledata is writable
  -l            check liveness (-m -u)
  -r            check readiness (-m -u)
  -s            check socket php-fpm listen to

EXAMPLES:
    check-container -u
    check-container -l
    check-container -r
EOF
}

check_moodledata() {
    # check moodledata is writable
    TMPFILE=`mktemp -q -p ${MOODLE_DATA}/`
    if [ $? -ne 0 ]; then
        echo "$0: CHECK: Can't create file in '${MOODLE_DATA}'"
        exit 1
    fi
    rm $TMPFILE
}

check_maintenance() {
    # check if moodle is in maintenance
    if ! [ -z ${MOODLE_DATA} ] ; then
        moodle_maintenance=$(test -f "${MOODLE_DATA}/climaintenance.html" && echo true || echo false)
        if [ "${moodle_maintenance}" == "true" ]; then
            echo "$0: CHECK: moodle maintenance detected"
        fi
    fi
}

check_url() {
    # check url for http status code
    check_url="${MOODLE_CHECK_URL:-localhost:${NGINX_PORT}${MOODLE_CHECK_PATH}}"
    ## check if moodle is in maintenance
    check_maintenance
    ## if moodle is in maintenance, allow 503 http status code
    if [ "${moodle_maintenance}" == "true" ]; then
        MOODLE_CHECK_CODE="${MOODLE_CHECK_CODE}\|503"
    fi
    ## check http code
    status_code=$(curl -s -o /dev/null -w %{http_code} -H "Host: ${MOODLE_CHECK_HOST}" "${check_url}")
    if [ $? -ne 0 ] && [[ ! "${MOODLE_CHECK_CODE}" =~ ${status_code} ]] ; then
        echo "$0: CHECK: http status code is ${status_code} and not ${MOODLE_CHECK_CODE//\\|/ or }"
        exit 1
    fi
}

check_php_fpm_socket() {
    # check php-fpm host and port
    PHP_FPM_CHECK_SOCKET=${PHP_FPM_CHECK_SOCKET:-$NGINX_FASTCGI_PASS}
    # if not using unix socket
    if [[ ${PHP_FPM_CHECK_SOCKET} =~ ^[0-9] ]]; then
        # extract host and port from var
        php_fpm_host="${PHP_FPM_CHECK_SOCKET%%:*}"
        php_fpm_port="${PHP_FPM_CHECK_SOCKET#*:}"
        timeout ${PHP_FPM_CHECK_SOCKET_TIMEOUT:-2.8} bash -c "cat < /dev/null > /dev/tcp/${php_fpm_host}/${php_fpm_port}"
        if [ $? -ne 0 ]; then
            echo "$0: CHECK: timeout checking tcp socket '${php_fpm_host}:${php_fpm_port}'"
            exit 1
        fi
    else
        echo "$0: CHECK: php-fpm is using unix socket"
    fi
}

while getopts ":mulrs" opt; do
  case ${opt} in
    m )
        check_moodledata
        ;;
    u )
        check_url
        ;;
    l )
        check_moodledata
        check_url
        ;;
    r )
        check_moodledata
        check_url
        ;;
    s )
        check_php_fpm_socket
        ;;
    \? )
        usage
        exit
        ;;
  esac
done
shift $((OPTIND -1))

if (( $OPTIND == 1 )); then
    echo -e "No check. Use an option:\n"
    usage
    exit
fi
