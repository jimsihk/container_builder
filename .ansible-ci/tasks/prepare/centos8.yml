- when: ansible_host | regex_search('(centos|rocky)*.*-minimal')
  block:
  - name: build image
    vars:
      dockerfile_builder_image: "{{ container_image }}_prepare"
      dockerfile_builder_force_source: true
      dockerfile_builder_force: true
    include_role:
      name: dockerfile_builder

  - name: get distro-release
    command: "{{ dockerfile_builder }} run --rm {{ dockerfile_builder_image }}_prepare rpm -qa"
    register: distro_release_task

  - name: save new distro release
    when: distro_release_task.stdout_lines
    set_fact:
      centos_distro_release: "{{ distro_release_task.stdout_lines | map('regex_search',distro_version_regex) | select('string') | first }}"

  - name: set version based on distro-release
    when: centos_distro_release is defined
    set_fact:
      version_image_major: "{{ centos_distro_release.split('.')[0] |
        default(false) }}"
      version_image_minor: "{{ centos_distro_release.split('.')[1].split('-')[0] |
        default(false) }}"
      version_image_patch: "{{ centos_distro_release.split('.')[1].split('-')[1] |
        default(centos_distro_release.split('.')[2]) | default(false) }}"

  - name: store pkg-list
    when: distro_release_task.stdout_lines
    register: store_pkg_list_task
    copy:
      dest: "{{ pkgs_list_dest }}"
      content: |
        {% for line in distro_release_task.stdout_lines | sort %}
        {{ line }}
        {% endfor %}

  - name: omit src sync when no new pkgs
    when: store_pkg_list_task is changed
    set_fact:
      dockerfile_builder_force_source: true
      dockerfile_builder_force: true
